package org.royrvik.emrservice;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.*;
import java.util.Date;

public class PDFCreator {
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    private static java.util.List<String> patientData;
    private static java.util.List<String> imagePaths;
    private static java.util.List<String> notes;

    public static ByteArrayOutputStream createPDF(java.util.List<String> p, java.util.List<String> i, java.util.List<String> n){

        try {
            patientData = p;
            imagePaths = i;
            notes = n;


            Document document = new Document();
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            PdfWriter.getInstance(document, baos); //Fix this line lal
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document);
            document.close();

            return baos;

        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;
    }

    private static void addMetaData(Document document) {
        document.addTitle("Examination");
        document.addSubject("Examination of patient");
        document.addKeywords("Java, PDF, sensitive");
        document.addAuthor("Andreas Røyrvik");
        document.addCreator("EMRApplication");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        //add one empty line
        addEmptyLine(preface, 1);
        // big header
        preface.add(new Paragraph("Examination of patient " + patientData.get(1), catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Report generated by: Andreas Røyrvik" + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph("This document describes something very important which only a genius would be able to write",
                smallBold));

        addEmptyLine(preface, 8);

        preface.add(new Paragraph("This section is just a fugly red text, lal.",
                redFont));

        document.add(preface);
        // Start a new page
        document.newPage();
    }

    private static void addContent(Document document) throws DocumentException {

        Anchor anchor = new Anchor("Examination result", catFont);
        anchor.setName("Examination result");


        int index = 1;
        int x = 0;
        for(String i : imagePaths){
            Chapter catPart = new Chapter(new Paragraph(anchor), 1);

            Paragraph subPara = new Paragraph("Image " + index++, subFont);
            Section subCatPart = catPart.addSection(subPara);

            Image image = null;
            try {
                int indentation = 0;
                image = Image.getInstance(i);
                float scaler = ((document.getPageSize().getWidth() - document.leftMargin()
                        - document.rightMargin() - indentation) / image.getWidth()) * 100;
                image.scalePercent(scaler);
            }
            catch (IOException e) {e.printStackTrace(); }

            Paragraph imgParagraph = new Paragraph();
            imgParagraph.add(image);
            subCatPart.add(imgParagraph); //ADD image from path



            subPara = new Paragraph("Notes", subFont);
            subCatPart = catPart.addSection(subPara);
            subCatPart.add(new Paragraph(notes.get(x++)));


            document.add(catPart);


        }


    }


    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
